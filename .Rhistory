mycolor <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor2 <- mycolor[colorOrder$ix]
rownames(selectDescriptors)
Color <- mycolor2[as.factor(rownames(selectDescriptors))]
s3d <- scatterplot3d(pca$scores[,1:3],xlab = "Comp.1",ylab = "Comp.2",zlab = "Comp.3",color = Color,pch = 20)
pca$scores
Color
as.factor(rownames(selectDescriptors))
View(selectDescriptors)
View(selectDescriptors)
View(strongOdor)
View(strongOdor)
strongOdor$category
Color <- mycolor2[strongOdor$category]
s3d <- scatterplot3d(pca$scores[,1:3],xlab = "Comp.1",ylab = "Comp.2",zlab = "Comp.3",color = Color,pch = 20)
s3d <- scatterplot3d(pca$scores[,1:3],xlab = "Comp.1",ylab = "Comp.2",zlab = "Comp.3",color = Color,type="h",pch = 20)
s3d <- scatterplot3d(pca$scores[,1:3],xlab = "Comp.1",ylab = "Comp.2",zlab = "Comp.3",color = Color,type="h",lty.hplot=2,pch = 20)
?scatterplot3d
s3d <- scatterplot3d(pca$scores[,1:3],xlab = "Comp.1",ylab = "Comp.2",zlab = "Comp.3",color = Color,type="h",lty.hplot=2,cex.symbols = 2,pch = 20)
s3d <- scatterplot3d(pca$scores[,1:3],xlab = "Comp.1",ylab = "Comp.2",zlab = "Comp.3",color = Color,type="h",lty.hplot=2,cex.symbols = 1.5,pch = 20)
p.vaiance.explained[1:2]
plot(pca$scores[,1], pca$scores[,2], pch = 19, xlab="PC1 - 26.6%",ylab="PC2 - 24.0%",color = Color)
abline(h=0, v=0, lty = 2)
text(pca$scores[,1], pca$scores[,2], labels=rownames(selectDescriptors),
cex=0.7, pos = 3)
twoPC <- data.frame(
odor = rownames(selectDescriptors),
category = strongOdor$category,
PC1 = pca$scores[,1],
PC2 = pca$scores[,2]
)
warnings()
View(twoPC)
View(twoPC)
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color)
twoplot
?geom_point
?geom_line
?geom_abline
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=3) +  geom_vline(xintercept = 0,linetype=3)
twoplot
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=3) +  geom_vline(xintercept = 0,linetype=4) + theme_classic()
twoplot
?geom_point
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + geom_text(aes(label=twoPC$odor), size=3)
twoplot
twoPC$category
View(twoPC)
View(twoPC)
selectDescriptors
strongOdorPhyChem
View(selectDescriptors)
View(selectDescriptors)
View(strongOdor)
View(strongOdor)
View(strongOdor)
View(strongOdorPhyChem)
View(strongOdorPhyChem)
View(strongOdorPhyChem)
inSource
View(phyChemData)
View(phyChemData)
View(phyChemData)
View(adjMatx)
View(adjMatx)
inSource2 <- which(sapply(rownames(adjMatx), trimws) %in% targetOdor)
inSource2
phyChemFile <- "/Users/shan/Documents/GoogleDrive/olfactoryCoding/data/Knaden2012-S1.xlsx"
strongChem
strongChem <- allType[inSource2]
strongChem
twoPC <- data.frame(
odor = rownames(selectDescriptors),
category = strongChem,
PC1 = pca$scores[,1],
PC2 = pca$scores[,2]
)
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + geom_text(aes(label=twoPC$odor), size=3)
twoplot
strongChem
allStrong <- analysisStrongOdor(adjMatx,allType)
allStrong
allStrong$odorSum
allStrong$odorSum$category
twoPC <- data.frame(
odor = rownames(selectDescriptors),
category = allStrong$odorSum$category,
PC1 = pca$scores[,1],
PC2 = pca$scores[,2]
)
View(twoPC)
View(twoPC)
View(strongOdor)
View(strongOdor)
targetOdor
sourceName2 <- tolower(sapply(rownames(adjMatx), function(x) gsub('\\s', '', x)))
inSource2 <- which(sapply(sourceName2, trimws) %in% rownames(selectDescriptors))
inSource2
selectDescriptors
sourceName2
inSource2 <- which(sapply(sourceName2, trimws) %in% targetName)
inSource2
allType[inSource2]
selectDescriptors
strongOdorPhyChem
inSource
inSource2
View(phyChemData)
View(phyChemData)
View(adjMatx)
View(adjMatx)
View(adjMatx)
sourceName
targetName
?which
sourceName2 <- tolower(sapply(rownames(adjMatx), function(x) gsub('\\s', '', x)))
targetName2 <- tolower(sapply(phyChemData[inSource,1], function(x) gsub('\\s', '', x)))
inSource2 <- which(sapply(sourceName2, trimws) %in% targetName2)
length(inSource2)
inSource2 <- which(sapply(sourceName2, trimws) %in% targetName2)
strongChem <- allType[inSource2]   #chemical categories
twoPC <- data.frame(
odor = rownames(selectDescriptors),
category = strongChem,
PC1 = pca$scores[,1],
PC2 = pca$scores[,2]
)
targetName2
sourceName2
inSource2
sourceName2[41]
sourceName2[49]
View(twoPC)
View(twoPC)
targetName2[1:3]
sourceName2[41]
inSource2 <- which(sapply(sourceName2, trimws) %in% targetName2)
sourceName2[41]
inSource2
allType
allType[41]
View(adjustSpikingMatx)
View(adjustSpikingMatx)
targetName
targetName[1]
targetName[5]
targetName2[5]
which(sapply(sourceName2, trimws) %in% targetName)
?which
inSource2 <- which(sapply(sourceName2, trimws) %in% targetName2,arr.ind = T)
inSource2
which(sapply(sourceName2, trimws) %in% targetName,arr.ind = T)
rm(sourceName2)
rm(targetName2)
sourceName2 <- tolower(sapply(rownames(adjMatx), function(x) gsub('\\s', '', x)))
targetName2 <- tolower(sapply(phyChemData[inSource,1], function(x) gsub('\\s', '', x)))
targetName2[1:3]
sourceName2[1:3]
inSource2 <- which(sapply(sourceName2, trimws) %in% targetName2)
inSource2
sourceName2[51]
which(sapply(sourceName2, trimws),c("benzaldehyde","2-methylphenol"))
which(sapply(sourceName2, trimws)==c("benzaldehyde","2-methylphenol"))
which(sapply(sourceName2, trimws) %in% c("benzaldehyde","2-methylphenol"))
sourceName2[59]
sourceName2[63]
which(sapply(sourceName2, trimws) %in% c("2-methylphenol","benzaldehyde"))
inSource2 <- match(targetName2,sapply(sourceName2, trimws))
inSource2
strongChem <- allType[inSource2]   #chemical categories
inSource2 <- which(sapply(sourceName2, trimws) %in% targetName)
twoPC <- data.frame(
odor = rownames(selectDescriptors),
category = strongChem,
PC1 = pca$scores[,1],
PC2 = pca$scores[,2]
)
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + geom_text(aes(label=twoPC$odor), size=3)
twoplot
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "PC1- 26.6%",y="PC2- 24.0%")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=18,face="bold"))#+ geom_text(aes(label=twoPC$odor), size=3)
twoplot
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "PC1- 26.6%",y="PC2- 24.0%")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=18))#+ geom_text(aes(label=twoPC$odor), size=3)
twoplot
?them
?theme
?labs
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(title = "PC of physiochemical properties",x = "PC1- 26.6%",y="PC2- 24.0%")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=18))#+ geom_text(aes(label=twoPC$odor), size=3)
twoplot
Color <- mycolor2[twoPC$category]
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(title = "PC of physiochemical properties",x = "PC1- 26.6%",y="PC2- 24.0%")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=18))#+ geom_text(aes(label=twoPC$odor), size=3)
twoplot
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(title = "PC of physiochemical properties",x = "PC1- 26.6%",y="PC2- 24.0%")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=18)) + geom_text(aes(label=twoPC$odor), size=3)
twoplot
s3d <- scatterplot3d(pca$scores[,1:3],xlab = "Comp.1",ylab = "Comp.2",zlab = "Comp.3",color = Color,type="h",lty.hplot=2,cex.symbols = 1.5,pch = 20)
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(title = "PC of physiochemical properties",x = "PC1- 26.6%",y="PC2- 24.0%")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=18))#+ geom_text(aes(label=twoPC$odor), size=3)
ggsave(PCAstrongOdorTwoProject.pdf,width = 4, height = 3.5)
?ggsave
ggsave(PCAstrongOdorTwoProject.pdf,twoplot,width = 4, height = 3.5)
ggsave(twoplot,PCAstrongOdorTwoProject.pdf,width = 4, height = 3.5)
ggsave(twoplot,"PCAstrongOdorTwoProject.pdf",width = 4, height = 3.5)
dev.off()
ggsave(twoplot,"PCAstrongOdorTwoProject.pdf",width = 4, height = 3.5)
twoplot
ggsave(twoplot,"PCAstrongOdorTwoProject.pdf",width = 4, height = 3.5)
ggsave("PCAstrongOdorTwoProject.pdf",twoplot, device = pdf,width = 4, height = 3.5)
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, group = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5),legend.text = element_text(colour =Color )) + labs(title = "PC of physiochemical properties",x = "PC1- 26.6%",y="PC2- 24.0%")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=18))#+ geom_text(aes(label=twoPC$odor), size=3)
twoplot
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, color = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5),legend.text = element_text(colour =Color )) + labs(title = "PC of physiochemical properties",x = "PC1- 26.6%",y="PC2- 24.0%")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=18))#+ geom_text(aes(label=twoPC$odor), size=3)
twoplot
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, color = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic()
twoplot
twoplot <- ggplot(twoPC,aes(x=PC1, y = PC2, color = category)) + geom_point(color = Color,size = 3) + geom_hline(yintercept = 0,linetype=4) +  geom_vline(xintercept = 0,linetype=4) + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5),legend.text = element_text(colour =Color )) + labs(title = "PC of physiochemical properties",x = "PC1- 26.6%",y="PC2- 24.0%")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=18))#+ geom_text(aes(label=twoPC$odor), size=3)
ggsave("PCAstrongOdorTwoProject.pdf",twoplot, device = pdf,width = 4, height = 3.5)
s3d <- scatterplot3d(pca$scores[,1:3],xlab = "Comp.1",ylab = "Comp.2",zlab = "Comp.3",color = Color,type="h",lty.hplot=2,cex.symbols = 1.5,pch = 20)
View(adjMatx)
View(adjMatx)
range(adjMatx)
tx <- apply(abs(adjMatx),2,sum)
tx
tx <- apply(abs(adjMatx),1,sum)
tx
hist(tx)
?hist
hist(tx,xlab = "number of OSN response",ylab = "percentage",col = "steelblue")
par(mai= c(0.5,1,0.5,0.5))
hist(tx,xlab = "number of OSN response",ylab = "percentage",col = "steelblue")
par(mai= c(1,1,0.5,0.5))
hist(tx,xlab = "number of OSN response",ylab = "percentage",col = "steelblue")
finalColor2
colorOrder <- sort(unique(allType),index.return = T)
#mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
mycolor <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor2 <- mycolor[colorOrder$ix]
#finalColor <- mycolor2[as.factor(as.character(allEcoOdor[,2]))]
#plot(hcEuc,hang=-1,labels = rownames(ecoOdorMatx))
finalColor1 <- mycolor2[as.factor(as.character(allEcoOdor[hcEuc$order,2]))]
finalColor2 <- mycolor2[as.factor(as.character(Source[hcEuc$order]))]
ecoOdor <- c("pyruvic acid","ethanol","2,3-butanediol","ethyl lactate","ethyl acetate","pentyl acetate","isopentyl acetate","4-ethylguaiacol","phenethyl alcohol","putrescine","methyl salicylate","ethyl benzoate","hexyl acetate","ethyl butyrate","ethyl hexanoate","6-methyl-5-hepten-2-one","1-hexanol","E3-hexenol","limonene")
Source <- c("fermentation","fermentation","fermentation","fermentation","yeast","yeast","yeast","yeast","yeast","bacterial","fruity","fruity","fruity","fruity","fruity","carotenoid","unripe","unripe","flavedo")
#load the original reponse matrix
rawRespFile <- "/Users/shan/Documents/GoogleDrive/olfactoryCoding/data/Carlson2006TableS1.xlsx"
rawResp <-  read.xlsx(rawRespFile,1)
allOdor <- tolower(sapply(rawResp[,1], function(x) gsub('\\s', '', x)))
ecoOdor[] <- tolower(sapply(ecoOdor, function(x) gsub('\\s', '', x)))
ecoOdorIndex <- which(allOdor %in% ecoOdor)
allEcoOdor <- rawResp[ecoOdorIndex,]
ecoOdorMatx <- allEcoOdor[,3:dim(allEcoOdor)[2]]
rownames(ecoOdorMatx) <- allEcoOdor[,1]
#allEcoOdor <- cbind(allEcoOdor,Source)
hcEuc<-hclust(dist(ecoOdorMatx,method = "euclidean"),method = "average")
colorOrder <- sort(unique(allType),index.return = T)
#mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
mycolor <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor2 <- mycolor[colorOrder$ix]
#finalColor <- mycolor2[as.factor(as.character(allEcoOdor[,2]))]
#plot(hcEuc,hang=-1,labels = rownames(ecoOdorMatx))
finalColor1 <- mycolor2[as.factor(as.character(allEcoOdor[hcEuc$order,2]))]
finalColor2 <- mycolor2[as.factor(as.character(Source[hcEuc$order]))]
finalColor2
Source[hcEuc$order]
hcEuc$order
ecoOdorMatx
rownames(ecoOdorMatx)[hcEuc$order]
Source
allEcoOdor
Source[hcEuc$order]
hcEuc$order
Source
allEcoOdor[,1]
hcEuc
hcEuc$labels
selectDescriptors
allEcoOdor[hcEuc$order,2]
allEcoOdor
allEcoOdor$odorantName
finalColor2
Source
as.factor(as.character(Source[hcEuc$order]))
hcEuc$order[1:3]
ecoOdor[c(19,15,18)]
ecoOdorIndex
?match
ecoOdorIndex <- match(ecoOdor,allOdor)
ecoOdorIndex
allEcoOdor <- rawResp[ecoOdorIndex,]
ecoOdorMatx <- allEcoOdor[,3:dim(allEcoOdor)[2]]
rownames(ecoOdorMatx) <- allEcoOdor[,1]
#allEcoOdor <- cbind(allEcoOdor,Source)
hcEuc<-hclust(dist(ecoOdorMatx,method = "euclidean"),method = "average")
colorOrder <- sort(unique(allType),index.return = T)
#mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
mycolor <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor2 <- mycolor[colorOrder$ix]
finalColor2 <- mycolor2[as.factor(as.character(Source[hcEuc$order]))]
finalColor2
pdf("ecoRelevantOdor_source.pdf",width = 4.5, height = 4.5)
par(mar = c(4,1,1,12))
gd %>% set("labels_col",finalColor2) %>% set("labels_cex", 1) %>% plot(horiz = T)
dev.off()
gd <- as.dendrogram(hcEuc)
pdf("ecoRelevantOdor_source.pdf",width = 4.5, height = 4.5)
par(mar = c(4,1,1,12))
gd %>% set("labels_col",finalColor2) %>% set("labels_cex", 1) %>% plot(horiz = T)
dev.off()
ecoOdorCorr <-cor(t(ecoOdorMatx))
#col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(ecoOdorCorr,method = "circle",order="original",type="lower",tl.col=mycolor2[as.factor(allEcoOdor[,2])], tl.srt=45)
?ggdotchart
?ggscatter
??ggscatter
data("mtcars")
df5 <- mtcars
df5$cyl <- as.factor(df5$cyl) # grouping variable
df5$name = rownames(df5) # for point labels
head(df5[, c("wt", "mpg", "cyl")], 3)
ggscatter(df5, x = "wt", y = "mpg",
color = "black", shape = 21, size = 4, # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE # Add correlation coefficient
)
install.packages("ggpubr")
df5
ecoOdorMatx
numOSNResp <- apply(ecoOdorMatx, 1, function (x)  sum(x>=50))
numOSNResp
allEcoOdor[hcEuc$order,2]
range(ecoOdorIndex)
View(rawResp)
View(rawResp)
rawResp[ecoOdorIndex,2]
numOSNResp <- apply(ecoOdorMatx, 1, function (x)  sum(x>=50))
ecoOdorRespdf <- data.frame(
odor <- rownames(ecoOdorMatx),
response <- numOSNResp,
source <- Source,
category <- rawResp[ecoOdorIndex,2]
)
numOSNResp <- apply(ecoOdorMatx, 1, function (x)  sum(x>=50))
ecoOdorRespdf <- data.frame(
odor = rownames(ecoOdorMatx),
response = numOSNResp,
source  = Source,
category =  rawResp[ecoOdorIndex,2]
)
ggdotchart(numOSNResp, x = "response", label = "number OSN response",
group = "source", color = "source",
palette = mycolor2[ecoOdorRespdf$source])
library(ggpubr)
ggdotchart(numOSNResp, x = "response", label = "number OSN response",
group = "source", color = "source",
palette = mycolor2[ecoOdorRespdf$source])
Source
levels(Source)
ecoOdorRespdf <- data.frame(
odor = rownames(ecoOdorMatx),
response = numOSNResp,
source  = as.factor(Source),
category =  rawResp[ecoOdorIndex,2]
)
levels(Source)
levels(ecoOdorRespdf$Source)
ecoOdorRespdf$Source
as.factor(Source)
ecoOdorRespdf$source
mycolor2[ecoOdorRespdf$source]
unique(ecoOdorRespdf$source)
ggdotchart(numOSNResp, x = "response", label = "number OSN response",
group = "source", color = "source",
palette = mycolor2[unique(ecoOdorRespdf$source)])
ggdotchart(numOSNResp, x = "response", label = "number OSN response",
group = "source", color = "source",
palette = mycolor2[c(1:7)])
?ggdotchart
ggdotchart(numOSNResp, x = "response", label = "number OSN response",
group = NULL, color = "source",
palette = mycolor2[c(1:7)])
ggplot(ecoOdorRespdf, aes(x=response, y=reorder(odor, response), colour=source)) + geom_point(size=3) + theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_line(colour="grey60", linetype="dashed")) + ylab("odorant") + labs(title="specificity of odorant")
ggplot(ecoOdorRespdf, aes(x=response, y=reorder(odor, response), colour=source)) + geom_point(size=3) + theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + scale_fill_manual(values = mycolor2[1:7]) + labs(title="specificity of odorant",x = "number of OSN response",y="odorant")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=18,face="bold"))
?theme
?reorder
reorder(ecoOdorRespdf$odor,ecoOdorRespdf$response)
ggplot(ecoOdorRespdf, aes(x=response, y=reorder(odor, response))) + geom_point(size=3) + theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + scale_fill_manual(values = mycolor2[1:7]) + labs(title="specificity of odorant",x = "number of OSN response",y="odorant")+ theme(axis.text.y = element_text(size=14,colour = ), axis.title = element_text(size=16,face="bold"))
ggplot(ecoOdorRespdf, aes(x=response, y=reorder(odor, response))) + geom_point(size=3, color = mycolor2[source]) + theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) +  labs(title="specificity of odorant",x = "number of OSN response",y="odorant")+ theme(axis.text.y = element_text(size=14,colour = ), axis.title = element_text(size=16,face="bold"))
ggplot(ecoOdorRespdf, aes(x=response, y=reorder(odor, response),color = source)) + geom_point(size=3) + theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + scale_fill_manual(values = mycolor2[1:7]) + labs(title="specificity of odorant",x = "number of OSN response",y="odorant")+ theme(axis.text.y = element_text(size=14,colour = ), axis.title = element_text(size=16,face="bold"))
mycolor2[1:7]
ggplot(ecoOdorRespdf, aes(x=response, y=reorder(odor, response),color = source)) + geom_point(size=3) + theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + scale_fill_manual(values = mycolor2[1:7]) + labs(title="specificity of odorant",x = "number of OSN response",y="odorant")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=16,face="bold"))
ggplot(ecoOdorRespdf, aes(x=response, y=reorder(odor, response),color = source)) + geom_point(size=3) + theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + scale_color_manual(values = mycolor2[1:7]) + labs(title="specificity of odorant",x = "number of OSN response",y="odorant")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=16,face="bold"))
spEcoOdorPlot <- ggplot(ecoOdorRespdf, aes(x=response, y=reorder(odor, response),color = source)) + geom_point(size=3) + theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + scale_color_manual(values = mycolor2[1:7]) + labs(title="specificity of odorant",x = "number of OSN response",y="odorant")+ theme(axis.text = element_text(size=14), axis.title = element_text(size=16,face="bold"))
ggsave("specifityEcoOdor.pdf",spEcoOdorPlot,device = pdf, width = 7, height = 5)
q()
a<-seq(0,1,sep=0.001)
?se
?seq
a<-seq(0,1,0.001)
y<-rnorm(1001)*0.3+a
?ar.ols
ar.ols(y)
plot(a,y)
plot(y[c(1:1000)],y[c(2:1001)])
cor(y[c(1:1000)],y[c(2:1001)])
ar(y, order.max = 1)
z <- y[(1:100)*10]
ar(z, order.max = 1)
plot(1:100,z)
z <- y[(1:200)*5]
plot(1:200,z)
exit
q
q()
q()
q()
q()
choose(10,c(2,1))
choose(11,c(2,1))
getwd()
library(xlsx)
library(RColorBrewer) #this package is used for color settings
library(ggplot2)
#source the functions
source("setBindAffiInhiMatx.R")
source("mixRespFunc.R")
source("mixResp.R")
source("pcaSpectrum.R")
source("digitMatx.R")
source("plotHistCompORN.R")
source("plotMeanCorr.R")
source("compAll.R")
source("plotPCAEntropy.R")
source("histCount.R")
#load data file
digiFile<-"data/CarslonORNdigit.xlsx"
#rawData1<-read.xlsx(filePath,1)   #with the last line as the
rawData1<-read.xlsx(digiFile,1)
rawMatx <- as.matrix(rawData1[,3:length(rawData1)])
rownames(rawMatx)<- rawData1$odorantName[1:110]
digiFile<-"../data/CarslonORNdigit.xlsx"
#rawData1<-read.xlsx(filePath,1)   #with the last line as the
rawData1<-read.xlsx(digiFile,1)
rawMatx <- as.matrix(rawData1[,3:length(rawData1)])
rownames(rawMatx)<- rawData1$odorantName[1:110]
#delete odorants that don't elicite any response
adjustSpikingMatx<-rawMatx     #estimated absolute ORNs spiking rate
temp<-apply(abs(adjustSpikingMatx),1,sum)
newMatx <- adjustSpikingMatx[which(temp >0),]
#delete the ORNs that only have inhibitory response or no repoonse
tempORN <- apply(apply(newMatx,2,range),2,sum)
newMatx <-newMatx[,-which(tempORN==-1)]
#basic parameters in the
ORNmax <- 250      #inorder to get the value of Kij
spontaneous <- 30  #assuming 10% basal level response
alpha <- ORNmax/spontaneous - 1
OdorNum <- dim(newMatx)[1] #number of odorants
source("allSingOSNresp.R")
adjustSpikingMatx<-rawMatx     #estimated absolute ORNs spiking rate
temp<-apply(abs(adjustSpikingMatx),1,sum)
newMatx <- adjustSpikingMatx[which(temp >0),]
#delete the ORNs that only have inhibitory response or no repoonse
tempORN <- apply(apply(newMatx,2,range),2,sum)
newMatx <-newMatx[,-which(tempORN==-1)]
ORNmax <- 250      #inorder to get the value of Kij
spontaneous <- 30  #assuming 10% basal level response
alpha <- ORNmax/spontaneous - 1
OdorNum <- dim(newMatx)[1] #number of odorants
#weight matrix
weightMatx <- newMatx
weightMatx[weightMatx>0] <- 1
weightMatx[weightMatx<0] <- -1
weightMatxNoInhi <-weightMatx
weightMatxNoInhi[weightMatxNoInhi<0] <- 0
#assuming the concentrations are 1
DigitSp<- c(15,30,50,100,150,200)
method <- 1
beta <- 0.1
interactionType = "comp"  #  multiple binding sites and competitive binding
sparsePo = (1:12)*5/107
# sparsePo = c(5,20)/107
sumEntropy = matrix(0,length(sparsePo),2)
for(i in 1:length(sparsePo)){
allEntropy <-allSingOSNresp(p0=sparsePo[i],newMatx,DigitSp,ORNmax,alpha,beta = 1,concentration = 1,method = 1,interType=interactionType)
sumEntropy[i,]<-c(sum(allEntropy$entrOri),sum(allEntropy$entroNoInhi))
}
View(n1all)
View(n1all)
N_odor
N_tot
n1all
allProb
sum(allProb)
pVector(c(1,2),p0,N_odor)
N_odor_noInhi
n1all_noInhi
allProbNoInhi
sum(allProbNoInhi)
p0
N_odor_noInhi
x
n1all_noInhi
p0 <- 0.5
allProbNoInhi <-apply(n1all_noInhi, MARGIN=1, FUN=function(x) pVector(x,p0,N_odor_noInhi))
sum(allProbNoInhi)
p0<- 0.05
allProbNoInhi <-apply(n1all_noInhi, MARGIN=1, FUN=function(x) pVector(x,p0,N_odor_noInhi))
sum(allProbNoInhi)
p0<- 0.9
allProbNoInhi <-apply(n1all_noInhi, MARGIN=1, FUN=function(x) pVector(x,p0,N_odor_noInhi))
sum(allProbNoInhi)
allProbNoInhi
n1all
n1all_noInhi
q()
