par(mfrow=c(4,3), mar=c(1,1,1,1))
for (i in 1:dim(selecTable)[1]){
subTab <- recordMatx[recordMatx[,1] == selecTable[i,1] & recordMatx[,2] == selecTable[i,2],]
links4 <- as.data.frame(unique(rbind(subTab[,c(1,3,5)],subTab[,c(1,4,6)],subTab[,c(2,3,7)],subTab[,c(2,4,8)])))
links4[,1:2] <- cbind(rownames(adjMatx)[links4[,1]],colnames(adjMatx)[links4[,2]])
colnames(links4) <- c("from","to","weight")
links4$color <- c("red","grey")[as.factor(links4$weight>0)]
links4$width <- abs(links4$weight)*1.5
nodes4 <- data.frame(id=c(unique(links4[,1]),unique(links4[,2])),color=c("blue","red")[as.factor(c(1,1,rep(2,times = length(unique(as.vector(subTab[,3:4]))))))])
nodes4$shape <- c("square","circle")[as.factor(nodes4$color)]
nodes4$color <- c(mycolor[allType[subTab[1,1:2]]],rep("#E0E0E0",length(unique(as.vector(subTab[,3:4])))))
nodes4$label <- nodes4$id
nodes4$size <- rep(20,times=length(nodes4$id))
allSubNet[[i]] <- visNetwork(nodes4,links4)
#browser()
rm(nodes4)
rm(links4)
rm(subTab)
#
#nodeName <- c(rownames(adjMatx)[subTab[1,1:2]],unique(links4[,2]))
# bipartite
# bmx <-acast(as.data.frame(links4),from ~ to)
# bmx <- matrix(as.numeric(unlist(bmx)),nrow=nrow(bmx))
#
# net5 <- graph_from_incidence_matrix(bmx)
# V(net5)$label <- nodeName
# plot(net5,layout=layout.bipartite)
}
#=============================================================
#calculate the degree distribution based on links2 information
mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
myclor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
dm <- links2
dm[is.na(dm)] <- 0
posiDegree<- apply(dm>0, 1, sum)
negaDegree <- apply(dm<0, 1, sum)
OrPosiDegr <- apply(dm>0, 2, sum)
OrNegaDegr <- apply(dm<0, 2, sum)
OdorDegreeFrame <- data.frame(
odor= rep(factor(rownames(links2),levels = rownames(links2)),times = 2),
type = factor(rep(c("positive","negative"),each=length(posiDegree))),
deg = c(posiDegree,negaDegree),
category = c(relType,relType)
)
degPlot <- ggplot(OdorDegreeFrame, aes(x=odor, y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degPlot <- degPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text.y = element_text(size=10,color = mycolor2[factor(relType)]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(degPlot,file = "degreeDistBifan.pdf",width = 6,height = 7)
degPlot
View(OdorDegreeFrame)
View(OdorDegreeFrame)
degPlot <- ggplot(OdorDegreeFrame, aes(x=odor, y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degPlot <- degPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text.y = element_text(size=10,color = mycolor2[factor(relType)]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
myclor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor2[factor(relType)]
class(myclor2)
class(myclor)
mycolor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
degOrPlot <- ggplot(OSNDegreeFrame, aes(x= reorder(OSN,-deg), y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degOrPlot <- degOrPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text = element_text(size=14),axis.title = element_text(size=18,face="bold"))
degOrPlot <- ggplot(OSNDegreeFrame, aes(x= reorder(OSN,-deg), y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degOrPlot <- degOrPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text = element_text(size=14),axis.title = element_text(size=18,face="bold"))
degPlot <- ggplot(OdorDegreeFrame, aes(x=odor, y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degPlot <- degPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text.y = element_text(size=10,color = mycolor2[factor(relType)]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(degPlot,file = "degreeDistBifan.pdf",width = 6,height = 7)
relType
levels(relType)
levels(factor(relType))
debugSource('~/Documents/GoogleDrive/olfactoryCoding/OlfactoryCode/VisualizeInteractionMotif.R')
allType <- as.numeric(chemType[which(temp >0)])
allType <- as.numeric(chemType[which(temp >0)])
allType
chemType
allType <- as.numeric(factor(chemType[which(temp >0)]))
allType
debugSource('~/Documents/GoogleDrive/olfactoryCoding/OlfactoryCode/VisualizeInteractionMotif.R')
NumOdors <- length(unique(as.vector(recordMatx[,c(1,2)])))
NumOr <- length(unique(as.vector(recordMatx[,c(3,4)])))
allOdorName <- rownames(newMatx)
allOrName <- colnames(newMatx)
# allType, the chemical type of these 107 odorants
## initialize the adjecent matrix
links <- matrix(NA,nrow = 107,ncol = 24)
colnames(links) <- colnames(newMatx)
rownames(links) <- rownames(newMatx)
for(i in 1:dim(recordMatx)[1]){
oneRow <- recordMatx[i,]
links[oneRow[1],oneRow[3]] <- oneRow[5]
links[oneRow[1],oneRow[4]] <- oneRow[6]
links[oneRow[2],oneRow[3]] <- oneRow[7]
links[oneRow[2],oneRow[4]] <- oneRow[8]
}
#get rid of irrelavent rows and columns
irRow <- apply(links,1,function(x) all(is.na(x)))
irCol <- apply(links,2,function(x) all(is.na(x)))
links2 <- links[-which(irRow),-which(irCol)]
relType <- allType[-which(irRow)]  #chemical types
relType
fType <- allType[-which(irRow)]
nodes <- data.frame(
id = c(rownames(links2),colnames(links2)),
cType = c(as.character(fType),rep(NA,times = dim(links2)[2])),
category = c(rep(1,times=dim(links2)[1]),rep(2,times=dim(links2)[2]))
)
#use igraph to plot the bipartite network
net <- graph_from_incidence_matrix(links2)
table(V(net)$type)
#mycolor <- brewer.pal(11,"Spectral")
mycolor <- c(brewer.pal(9,"Set1"),"black")
colrs <- mycolor[c(1,10)]
V(net)$color <- mycolor[nodes$cType]
plot(net,vertex.label=NA,vertex.size = 4,layout=layout.bipartite)
tx <- links2
tx[is.na(tx)] <- 0
link3 <- as.data.frame(which(tx!=0,arr.ind = T))
odorID <- rownames(tx)[link3[,1]]
orID <- colnames(tx)[link3[,2]]
wt <- abs(tx[as.matrix(link3)])
edgeType <- tx[as.matrix(link3)]
edgeType[edgeType > 0] <- 1  #excitatory
edgeType[edgeType < 0] <- 2  #inhibitory
link3[] <- cbind(odorID,orID)
link3$width <- wt
link3$color <- c("grey","red")[edgeType]
colnames(link3) <- c("from","to","width","color")
#nodes3 <- c(unique(link3[,1]),unique(link3[,2]))
#nodes$id <- c(unique(link3[,1]),unique(link3[,2]))
nodes$label <- c(rownames(tx),colnames(tx))
nodes$shape <- c("square","circle")[nodes$category]
nodes$color.background <- mycolor[nodes$cType]
nodes$color.border <- "black"
nodes$color.highlight.background <-"orange"
nodes$color.highlight.border <- "darked"
nodes$size <- rep(20,times=length(nodes$shape))
#nodes$label <- rep(NA,times=length(nodes$shape))
visNetwork(nodes,link3)
visNetwork(nodes, link3) %>% visOptions(highlightNearest = TRUE,selectedBy = "cType")
#sub networks of odors elicit negative and positive response on at least three OSNs
# based on recordMatrx
nOdor <- table(recordMatx[,1])
bifanInd <- as.data.frame(recordMatx[,1:2])
repTable <- aggregate(list(numdup=rep(1,nrow(bifanInd))),bifanInd,length)
selecTable <- subset(repTable,numdup>3)
allSubNet <- c()
par(mfrow=c(4,3), mar=c(1,1,1,1))
for (i in 1:dim(selecTable)[1]){
subTab <- recordMatx[recordMatx[,1] == selecTable[i,1] & recordMatx[,2] == selecTable[i,2],]
links4 <- as.data.frame(unique(rbind(subTab[,c(1,3,5)],subTab[,c(1,4,6)],subTab[,c(2,3,7)],subTab[,c(2,4,8)])))
links4[,1:2] <- cbind(rownames(adjMatx)[links4[,1]],colnames(adjMatx)[links4[,2]])
colnames(links4) <- c("from","to","weight")
links4$color <- c("red","grey")[as.factor(links4$weight>0)]
links4$width <- abs(links4$weight)*1.5
nodes4 <- data.frame(id=c(unique(links4[,1]),unique(links4[,2])),color=c("blue","red")[as.factor(c(1,1,rep(2,times = length(unique(as.vector(subTab[,3:4]))))))])
nodes4$shape <- c("square","circle")[as.factor(nodes4$color)]
nodes4$color <- c(mycolor[allType[subTab[1,1:2]]],rep("#E0E0E0",length(unique(as.vector(subTab[,3:4])))))
nodes4$label <- nodes4$id
nodes4$size <- rep(20,times=length(nodes4$id))
allSubNet[[i]] <- visNetwork(nodes4,links4)
#browser()
rm(nodes4)
rm(links4)
rm(subTab)
#
#nodeName <- c(rownames(adjMatx)[subTab[1,1:2]],unique(links4[,2]))
# bipartite
# bmx <-acast(as.data.frame(links4),from ~ to)
# bmx <- matrix(as.numeric(unlist(bmx)),nrow=nrow(bmx))
#
# net5 <- graph_from_incidence_matrix(bmx)
# V(net5)$label <- nodeName
# plot(net5,layout=layout.bipartite)
}
#=============================================================
#calculate the degree distribution based on links2 information
mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
mycolor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
dm <- links2
dm[is.na(dm)] <- 0
posiDegree<- apply(dm>0, 1, sum)
negaDegree <- apply(dm<0, 1, sum)
OrPosiDegr <- apply(dm>0, 2, sum)
OrNegaDegr <- apply(dm<0, 2, sum)
OdorDegreeFrame <- data.frame(
odor= rep(factor(rownames(links2),levels = rownames(links2)),times = 2),
type = factor(rep(c("positive","negative"),each=length(posiDegree))),
deg = c(posiDegree,negaDegree),
category = c(relType,relType)
)
degPlot <- ggplot(OdorDegreeFrame, aes(x=odor, y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degPlot <- degPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text.y = element_text(size=10,color = mycolor2[factor(relType)]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(degPlot,file = "degreeDistBifan.pdf",width = 6,height = 7)
degPlot <- ggplot(OdorDegreeFrame, aes(x=odor, y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degPlot <- degPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text.y = element_text(size=10,color = mycolor2[relType]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(degPlot,file = "degreeDistBifan.pdf",width = 6,height = 7)
relType
View(rawData1)
View(OdorDegreeFrame)
View(rawData1)
View(rawData1)
View(rawData1)
seq(1,10,1)[factor(rawData1[,2])]
?factor
seq(1,10,1)[factor(rawData1[,2],is.ordered=F)]
seq(1,10,1)[factor(rawData1[,2],ordered=F)]
?as.character()
?as.character
seq(1,10,1)[factor(rawData1[,2],is.ordered=seq(1,10,1))]
?factor
seq(1,10,1)[factor(rawData1[,2],ordered=FALSE)]
seq(1,10,1)[factor(rawData1[,2],ordered=T)]
seq(1,10,1)[factor(rawData1[,2],levels = seq(1,10,1))]
factor(rawData1[,2],levels = seq(1,10,1))
seq(1,1,10)
seq(1,10,1)
factor(rawData1[,2])
order(levels(factor(rawData1[,2])))
levels(factor(rawData1[,2]))
as.numeric(factor(rawData1[,2],ordered=T))
unique(as.numeric(factor(rawData1[,2],ordered=T)))
mycolor2
allType
colorOrder <- unique(allType)
mycolor2
mycolor2 <- mycolor2[colorOrder]
mycolor2
colorOrder
?order
levels(allType)
levels(factor(allType))
unique(allType)
tx <- unique(allType)
mycolor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor2
ty <- factor(mycolor2,levels = tx)
ty
class(mycolor2)
ty <- factor(mycolor2,labels = tx)
ty
mycolor
mycolor2
as.numeric(ty)
mycolor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor
mycolor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor
mycolor2
ty <- factor(mycolor2,labels = tx)
tx
ty
as.numeric(ty)
1:10
(1:10)[unique(allType)]
unique(allType)
(1:10)[allType]
mycolor2
?sort
sort(c(4,1,3,2),index.return=T)
colorOrder <- unique(allType)
mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
mycolor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor2
mycolor2 <- mycolor2[colorOrder]
mycolor2
dm[is.na(dm)] <- 0
posiDegree<- apply(dm>0, 1, sum)
negaDegree <- apply(dm<0, 1, sum)
OrPosiDegr <- apply(dm>0, 2, sum)
OrNegaDegr <- apply(dm<0, 2, sum)
OdorDegreeFrame <- data.frame(
odor= rep(factor(rownames(links2),levels = rownames(links2)),times = 2),
type = factor(rep(c("positive","negative"),each=length(posiDegree))),
deg = c(posiDegree,negaDegree),
category = c(relType,relType)
)
degPlot <- ggplot(OdorDegreeFrame, aes(x=odor, y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degPlot <- degPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text.y = element_text(size=10,color = mycolor2[relType]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(degPlot,file = "degreeDistBifan.pdf",width = 6,height = 7)
colorOrder
sort(c(4,1,3,2),index.return=T)
colorOrder <- sort(unique(allType),inex.teturn = T)
colorOrder <- sort(unique(allType),index.teturn = T)
colorOrder <- sort(unique(allType),index.return = T)
colorOrder$ixx
colorOrder$ix
mycolor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor2 <- mycolor2[colorOrder$ix]
degOrPlot <- ggplot(OSNDegreeFrame, aes(x= reorder(OSN,-deg), y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degOrPlot <- degOrPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text = element_text(size=14),axis.title = element_text(size=18,face="bold"))
ggsave(degOrPlot,file = "degreeOSNDistBifan.pdf",width = 4,height = 5)
degPlot <- ggplot(OdorDegreeFrame, aes(x=odor, y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degPlot <- degPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text.y = element_text(size=10,color = mycolor2[relType]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(degPlot,file = "degreeDistBifan.pdf",width = 6,height = 7)
odorRespSumm <- apply(abs(adjMatx)>0, 1, sum)
odorSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorRespSumm<=9)],levels = rownames(adjMatx)[-which(odorRespSumm<=9)]),
repNum = odorRespSumm[odorRespSumm>9],
category = allType[-which(odorRespSumm<=9)]
)
mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
myclor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
odorSumPlot <- ggplot(odorSum, aes(x=odor, y= repNum))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
odorSumPlot <- odorSumPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=10,color = mycolor2[odorSum$category]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(odorSumPlot,file = "strongOdor.pdf",width = 5,height = 5)
colorOrder <- sort(unique(allType),index.return = T)
#mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
myclor2 <- colors()[c(567,566,456,24,88,225,142,554,257,614)]
mycolor2 <- mycolor2[colorOrder$ix]
dm <- links2
dm[is.na(dm)] <- 0
posiDegree<- apply(dm>0, 1, sum)
negaDegree <- apply(dm<0, 1, sum)
OrPosiDegr <- apply(dm>0, 2, sum)
OrNegaDegr <- apply(dm<0, 2, sum)
OdorDegreeFrame <- data.frame(
odor= rep(factor(rownames(links2),levels = rownames(links2)),times = 2),
type = factor(rep(c("positive","negative"),each=length(posiDegree))),
deg = c(posiDegree,negaDegree),
category = c(relType,relType)
)
degPlot <- ggplot(OdorDegreeFrame, aes(x=odor, y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degPlot <- degPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text.y = element_text(size=10,color = mycolor2[relType]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(degPlot,file = "degreeDistBifan.pdf",width = 6,height = 7)
OSNDegreeFrame <- data.frame(
OSN= rep(colnames(links2),times = 2),
type = factor(rep(c("positive","negative"),each=length(OrPosiDegr))),
deg = c(OrPosiDegr,OrNegaDegr)
)
degOrPlot <- ggplot(OSNDegreeFrame, aes(x= reorder(OSN,-deg), y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degOrPlot <- degOrPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text = element_text(size=14),axis.title = element_text(size=18,face="bold"))
ggsave(degOrPlot,file = "degreeOSNDistBifan.pdf",width = 4,height = 5)
myclor2 <- colors()[c(567,566,456,24,88,225,142,121,554,257)]
mycolor2 <- mycolor2[colorOrder$ix]
degPlot <- ggplot(OdorDegreeFrame, aes(x=odor, y= deg,fill=type))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
degPlot <- degPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="degree")+ theme(axis.text.y = element_text(size=10,color = mycolor2[relType]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(degPlot,file = "degreeDistBifan.pdf",width = 6,height = 7)
odorRespSumm <- apply(abs(adjMatx)>0, 1, sum)
odorSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorRespSumm<=9)],levels = rownames(adjMatx)[-which(odorRespSumm<=9)]),
repNum = odorRespSumm[odorRespSumm>9],
category = allType[-which(odorRespSumm<=9)]
)
#mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
#myclor2 <- colors()[c(567,566,456,24,88,225,142,554,257,614)]
odorSumPlot <- ggplot(odorSum, aes(x=odor, y= repNum))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
odorSumPlot <- odorSumPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=10,color = mycolor2[odorSum$category]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(odorSumPlot,file = "strongOdor.pdf",width = 5,height = 5)
View(odorSum)
View(odorSum)
colorOrder <- sort(unique(allType),index.return = T)
#mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
mycolor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
mycolor2 <- mycolor2[colorOrder$ix]
odorRespSumm <- apply(abs(adjMatx)>0, 1, sum)
odorSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorRespSumm<=9)],levels = rownames(adjMatx)[-which(odorRespSumm<=9)]),
repNum = odorRespSumm[odorRespSumm>9],
category = allType[-which(odorRespSumm<=9)]
)
#mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
#myclor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
odorSumPlot <- ggplot(odorSum, aes(x=odor, y= repNum))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
odorSumPlot <- odorSumPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=10,color = mycolor2[odorSum$category]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(odorSumPlot,file = "strongOdor.pdf",width = 5,height = 5)
allSubNet[[1]]
allSubNet[[1]]$elementId
links4
selecTable
adjMatx[,1]
View(adjMatx)
View(adjMatx)
adjMatx[,1]
selecTable
tnn <- colnames(adjMatx)
tnn(selecTable$V1)
tnn[selecTable$V1]
tnn
tnn <- rownames(adjMatx)
tnn[selecTable$V1]
tnn[selecTable$V2]
odorInhiSumm <- apply(abs(adjMatx)<0, 1, sum)
inhiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorRespSumm<=4)],levels = rownames(adjMatx)[-which(odorRespSumm<=4)]),
repNum = odorRespSumm[odorRespSumm>4],
category = allType[-which(odorRespSumm<=4)]
)
inhiSum
threshold <- 9   #threhold number of inhibitory responses
inhiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorRespSumm<=threshold)],levels = rownames(adjMatx)[-which(odorRespSumm<=threshold)]),
repNum = odorRespSumm[odorRespSumm>threshold],
category = allType[-which(odorRespSumm<=threshold)]
)
inhiSum
odorInhiSumm
odorInhiSumm <- apply(adjMatx<0, 1, sum)
threshold <- 4   #threhold number of inhibitory responses
inhiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorRespSumm<=threshold)],levels = rownames(adjMatx)[-which(odorRespSumm<=threshold)]),
repNum = odorRespSumm[odorRespSumm>threshold],
category = allType[-which(odorRespSumm<=threshold)]
)
inhiSum
odorInhiSumm
threshold <- 7   #threhold number of inhibitory responses
inhiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorRespSumm<=threshold)],levels = rownames(adjMatx)[-which(odorRespSumm<=threshold)]),
repNum = odorRespSumm[odorRespSumm>threshold],
category = allType[-which(odorRespSumm<=threshold)]
)
inhiSum
View(inhiSum)
View(inhiSum)
range(odorInhiSumm)
which(odorRespSumm>threshold)
View(adjMatx)
View(adjMatx)
which(odorRespSumm>10)
which(odorRespSumm>13)
odorInhiSumm <- apply(adjMatx<0, 1, sum)
threshold <- 7   #threhold number of inhibitory responses
inhiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorInhiSumm<=threshold)],levels = rownames(adjMatx)[-which(odorInhiSumm<=threshold)]),
repNum = odorInhiSumm[odorRespSumm>threshold],
category = allType[-which(odorInhiSumm<=threshold)]
)
odorInhiSumm <- apply(adjMatx<0, 1, sum)
threshold <- 7   #threhold number of inhibitory responses
inhiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorInhiSumm<=threshold)],levels = rownames(adjMatx)[-which(odorInhiSumm<=threshold)]),
repNum = odorInhiSumm[odorInhiSumm>threshold],
category = allType[-which(odorInhiSumm<=threshold)]
)
inhiSum
odorInhiSumm <- apply(adjMatx<0, 1, sum)
threshold <- 4   #threhold number of inhibitory responses
inhiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorInhiSumm<=threshold)],levels = rownames(adjMatx)[-which(odorInhiSumm<=threshold)]),
repNum = odorInhiSumm[odorInhiSumm>threshold],
category = allType[-which(odorInhiSumm<=threshold)]
)
inhiSum
odorPosiSumm <- apply(adjMatx>0, 1, sum)
posiThres <- 9     #threshold of positive odorant
odorSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorPosiSumm<=posiThres)],levels = rownames(adjMatx)[-which(odorPosiSumm<=posiThres)]),
repNum = odorPosiSumm[odorPosiSumm>posiThres],
category = allType[-which(odorPosiSumm<=posiThres)]
)
odorSum
odorPosiSumm <- apply(adjMatx>0, 1, sum)
posiThres <- 9     #threshold of positive odorant
posiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorPosiSumm<=posiThres)],levels = rownames(adjMatx)[-which(odorPosiSumm<=posiThres)]),
repNum = odorPosiSumm[odorPosiSumm>posiThres],
category = allType[-which(odorPosiSumm<=posiThres)]
)
odorPosiPlot <- ggplot(posiSum, aes(x=odor, y= repNum))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
odorPosiPlot <- odorPosiPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=10,color = mycolor2[posiSum$category]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(odorPosiPlot,file = "strongPosiOdor.pdf",width = 5,height = 5)
odorSumPlot <- odorSumPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=14,color = mycolor2[odorSum$category]),axis.text.x = element_text(size=16), axis.title = element_text(size=18,face="bold"))
ggsave(odorSumPlot,file = "strongOdor.pdf",width = 5,height = 5)
odorPosiSumm <- apply(adjMatx>0, 1, sum)
posiThres <- 9     #threshold of positive odorant
posiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorPosiSumm<=posiThres)],levels = rownames(adjMatx)[-which(odorPosiSumm<=posiThres)]),
repNum = odorPosiSumm[odorPosiSumm>posiThres],
category = allType[-which(odorPosiSumm<=posiThres)]
)
odorPosiPlot <- ggplot(posiSum, aes(x=odor, y= repNum))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
odorPosiPlot <- odorPosiPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=14,color = mycolor2[posiSum$category]),axis.text.x = element_text(size=16), axis.title = element_text(size=18,face="bold"))
ggsave(odorPosiPlot,file = "strongPosiOdor.pdf",width = 5,height = 5)
odorPosiPlot <- ggplot(posiSum, aes(x=odor, y= repNum))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
odorPosiPlot <- odorPosiPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=12,color = mycolor2[posiSum$category]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(odorPosiPlot,file = "strongPosiOdor.pdf",width = 4,height = 4)
ggsave(odorPosiPlot,file = "strongPosiOdor.pdf",width = 4,height = 4.5)
ggsave(odorPosiPlot,file = "strongPosiOdor.pdf",width = 4.5,height = 4)
ggsave(odorPosiPlot,file = "strongPosiOdor.pdf",width = 5,height = 4)
odorRespSumm <- apply(abs(adjMatx)>0, 1, sum)
odorSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorRespSumm<=9)],levels = rownames(adjMatx)[-which(odorRespSumm<=9)]),
repNum = odorRespSumm[odorRespSumm>9],
category = allType[-which(odorRespSumm<=9)]
)
#mycolor <- c(brewer.pal(8,"Dark2"),"#A6CEE3","black")
#myclor2 <- colors()[c(567,566,456,24,88,225,142,121,136,614)]
odorSumPlot <- ggplot(odorSum, aes(x=odor, y= repNum))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
odorSumPlot <- odorSumPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=10,color = mycolor2[odorSum$category]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(odorSumPlot,file = "strongOdor.pdf",width = 5,height = 5)
odorInhiPlot <- ggplot(inhiSum, aes(x=odor, y= repNum))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
odorInhiPlot <- odorInhiPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=12,color = mycolor2[inhiSum$category]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(odorInhiPlot,file = "strongInhiOdor.pdf",width = 5,height = 4)
inhiSum$category
allType
odorInhiSumm <- apply(adjMatx<0, 1, sum)
threshold <- 5   #threhold number of inhibitory responses
inhiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorInhiSumm<=threshold)],levels = rownames(adjMatx)[-which(odorInhiSumm<=threshold)]),
repNum = odorInhiSumm[odorInhiSumm>threshold],
category = allType[-which(odorInhiSumm<=threshold)]
)
odorInhiPlot <- ggplot(inhiSum, aes(x=odor, y= repNum))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
odorInhiPlot <- odorInhiPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=12,color = mycolor2[inhiSum$category]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(odorInhiPlot,file = "strongInhiOdor.pdf",width = 5,height = 4)
odorInhiSumm <- apply(adjMatx<0, 1, sum)
threshold <- 4   #threhold number of inhibitory responses
inhiSum <- data.frame(
odor = factor(rownames(adjMatx)[-which(odorInhiSumm<=threshold)],levels = rownames(adjMatx)[-which(odorInhiSumm<=threshold)]),
repNum = odorInhiSumm[odorInhiSumm>threshold],
category = allType[-which(odorInhiSumm<=threshold)]
)
odorInhiPlot <- ggplot(inhiSum, aes(x=odor, y= repNum))+ geom_bar(stat="identity") + coord_flip()  #here use reorder to oder the bar "reorder(odor, -deg)"
odorInhiPlot <- odorInhiPlot + theme_classic() + theme(axis.line.x = element_line(color="black", size = 0.5),axis.line.y = element_line(color="black", size = 0.5)) + labs(x = "odorant",y="number OSN response")+ theme(axis.text.y = element_text(size=12,color = mycolor2[inhiSum$category]),axis.text.x = element_text(size=14), axis.title = element_text(size=18,face="bold"))
ggsave(odorInhiPlot,file = "strongInhiOdor.pdf",width = 5,height = 4)
